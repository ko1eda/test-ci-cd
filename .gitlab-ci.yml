variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: test_db
  MYSQL_USER: test_user
  MYSQL_PASSWORD: password
  
stages:
  - build
  - testing
  - deployment

build_containers:
  stage: build 
  image: docker:stable
  services:
   - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    # PORT: 2375
    DOCKER_HOST: tcp://docker:2375/
  script:
    - apk update
    - apk add py-pip
    - pip install docker-compose
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - cd build/
    - docker-compose -f docker-compose.gitlab.yml build 
    - docker-compose -f docker-compose.gitlab.yml push # need to figure out how to push here (how to get credentials)

    
unit_testing:
  stage: testing
  image: registry.gitlab.com/koleda/test-ci-cd/php-fpm:1.0.0
  before_script:
    - curl --location --output /usr/local/bin/phpunit https://phar.phpunit.de/phpunit.phar
    - chmod +x /usr/local/bin/phpunit
  services:
    - name: registry.gitlab.com/koleda/test-ci-cd/mysql:1.0.0
      alias: mysql
    - redis:5.0.0-alpine
  script:
    - cd test-app/
    - cp .env.testing .env
    - composer install
    - php artisan key:generate
    - php artisan migrate
    - phpunit 

deploy_production:  
  stage: deployment
  image: registry.gitlab.com/koleda/test-ci-cd/php-fpm:1.0.0
  before_script:
    - composer global require laravel/envoy
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    - cd test-app/ && ~/.composer/vendor/bin/envoy run deploy --IP=34.229.210.64 --GITLAB_SECRET=$GITLAB_SECRET
  environment:
    name: production
    url: http:/34.229.210.64
  when: manual
  only:
    - master